---
import { Badge } from '@astrojs/starlight/components'

import { getBlogEntryMetadata, type StarlightBlogEntry } from '../libs/content'

import Author from './Author.astro'

interface Props {
  entry: StarlightBlogEntry
  showBadges?: boolean
}

const { entry, showBadges = true } = Astro.props
const { authors, date, updateDate } = getBlogEntryMetadata(entry)

const hasAuthors = authors.length > 0
const hasUpdateDate = updateDate !== undefined
---

<div class="metadata not-content">
  <time datetime={entry.data.date.toISOString()}>
    {date}
  </time>
  {
    hasAuthors ? (
      <div class="authors">
        {authors.map((author) => (
          <Author {author} />
        ))}
      </div>
    ) : null
  }
  {
    hasUpdateDate && entry.data.updateDate?.toISOString() !== entry.data.date.toISOString() ? (
      <time class="update-date" datetime={entry.data.updateDate?.toISOString()}>
        Last update: {updateDate}
      </time>
    ) : null
  }
  {
    showBadges && entry.data?.draft && (
      <div class="badges">
        <Badge size="medium" text="Draft" variant="caution" />
      </div>
    )
  }
</div>

<style>
  .metadata {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  time {
    font-size: var(--sl-text-sm);
  }

  time.update-date {
    font-size: var(--sl-text-xs);
  }

  .authors {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem 1rem;
  }

  .badges {
    margin-top: 0.25rem;
  }
</style>
