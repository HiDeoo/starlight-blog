---
import { Badge } from '@astrojs/starlight/components'

import { getBlogEntryMetadata, type StarlightBlogEntry } from '../libs/content'

import Author from './Author.astro'

interface Props {
  entry: StarlightBlogEntry
  showBadges?: boolean
}

const { entry, showBadges = true } = Astro.props
const { authors, date, lastUpdated } = getBlogEntryMetadata(entry)

const hasAuthors = authors.length > 0
---

<div class="metadata not-content">
  <div class="dates">
    <time datetime={entry.data.date.toISOString()}>
      {date}
    </time>
    {
      lastUpdated !== undefined &&
      typeof entry.data.lastUpdated !== 'boolean' &&
      entry.data.lastUpdated?.toISOString() !== entry.data.date.toISOString() ? (
        <span class="update-date">
          <span style="margin-inline: 0.25rem;">â€¢</span> Last update:
          <time datetime={entry.data.lastUpdated?.toISOString()}>{lastUpdated}</time>
        </span>
      ) : null
    }
  </div>
  {
    hasAuthors ? (
      <div class="authors">
        {authors.map((author) => (
          <Author {author} />
        ))}
      </div>
    ) : null
  }
  {
    showBadges && entry.data?.draft && (
      <div class="badges">
        <Badge size="medium" text="Draft" variant="caution" />
      </div>
    )
  }
</div>

<style>
  .metadata {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .dates {
    font-size: var(--sl-text-sm);
  }

  .update-date {
    color: var(--sl-color-gray-3);
  }

  .authors {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem 1rem;
  }

  .badges {
    margin-top: 0.25rem;
  }
</style>
